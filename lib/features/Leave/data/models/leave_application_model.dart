import 'package:dynamic_emr/features/Leave/domain/entities/leave_application_entity.dart';

class LeaveApplicationModel extends LeaveApplicationEntity {
  LeaveApplicationModel({
    required super.id,
    required super.applicationDate,
    required super.applicationDateNp,
    required super.leaveTypeId,
    required super.employeeId,
    required super.fromDate,
    required super.fromDateNp,
    super.halfDayStatus,
    required super.toDate,
    required super.toDateNp,
    required super.totalLeaveDays,
    required super.extendedFromDate,
    required super.extendedToDate,
    required super.extendedFromDateNp,
    required super.extendedToDateNp,
    required super.extendedLeaveTypeId,
    super.extendedHalfDayStatus,
    required super.extendedTotalLeaveDays,
    required super.reason,
    required super.status,
    required super.leaveTypeName,
    super.extendedLeaveTypeName,
    required super.employeeDisplayName,
    required super.isRecommendationApproved,
    required super.isApproved,
    required super.isSubstituteAccepted,
    required super.substitutationStatus,
    required super.recommendationStatus,
    required super.leaveNo,
    required super.isInValidForApproval,
    super.leaveApprovedBy,
    super.approveRemarks,
    super.leaveApprovedOn,
    super.rejectedBy,
    super.recommendationApprovedBy,
    super.recommendationApprovedOn,
    super.recommendationRemarks,
    super.substituteAcceptRejectBy,
    super.substituteAcceptRejectOn,
    super.substituteRemarks,
    super.substituteEmployeeName,
    super.recommendedByEmployeeName,
  });

  factory LeaveApplicationModel.fromJson(Map<String, dynamic> json) {
    return LeaveApplicationModel(
      id: json['id'] ?? 0,
      applicationDate: json['applicationDate'] ?? '',
      applicationDateNp: json['applicationDateNp'] ?? '',
      leaveTypeId: json['leaveTypeId'] ?? 0,
      employeeId: json['employeeId'] ?? 0,
      fromDate: json['fromDate'] ?? '',
      fromDateNp: json['fromDateNp'] ?? '',
      toDate: json['toDate'] ?? '-',
      toDateNp: json['toDateNp'] ?? '',
      halfDayStatus: json['halfDayStatus'],
      totalLeaveDays: (json['totalLeaveDays'] ?? 0.0).toDouble(),
      extendedFromDate: json['extendedFromDate'],
      extendedToDate: json['extendedToDate'],
      extendedFromDateNp: json['extendedFromDateNp'],
      extendedToDateNp: json['extendedToDateNp'],
      extendedLeaveTypeId: json['extendedLeaveTypeId'],
      extendedHalfDayStatus: json['extendedHalfDayStatus'],
      extendedTotalLeaveDays: (json['extendedTotalLeaveDays'] ?? 0.0)
          .toDouble(),
      reason: json['reason'] ?? 'N/A',
      status: json['status'] ?? '',
      leaveTypeName: json['leaveTypeName'] ?? '',
      extendedLeaveTypeName: json['extendedLeaveTypeName'],
      employeeDisplayName: json['employeeDisplayName'] ?? '',
      isRecommendationApproved: json['isRecommendationApproved'] ?? false,
      isApproved: json['isApproved'] ?? false,
      isSubstituteAccepted: json['isSubstituteAccepted'] ?? false,
      substitutationStatus: json['substitutationStatus'] ?? '',
      recommendationStatus: json['recommendationStatus'] ?? '',
      leaveNo: json['leaveNo'] ?? '',
      isInValidForApproval: json['isInValidForApproval'] ?? false,
      leaveApprovedBy: json['leaveApprovedBy'],
      approveRemarks: json['approveRemarks'],
      leaveApprovedOn: json['leaveApprovedOn'],
      rejectedBy: json['rejectedBy'],
      recommendationApprovedBy: json['recommendationApprovedBy'],
      recommendationApprovedOn: json['recommendationApprovedOn'],
      recommendationRemarks: json['recommendationRemarks'],
      substituteAcceptRejectBy: json['substituteAcceptRejectBy'],
      substituteAcceptRejectOn: json['substituteAcceptRejectOn'],
      substituteRemarks: json['substituteRemarks'],
      substituteEmployeeName: json['substituteEmployeeName'],
      recommendedByEmployeeName: json['recommendedByEmployeeName'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'id': id,
      'applicationDate': applicationDate,
      'applicationDateNp': applicationDateNp,
      'leaveTypeId': leaveTypeId,
      'employeeId': employeeId,
      'fromDate': fromDate,
      'fromDateNp': fromDateNp,
      'toDate': toDate,
      'toDateNp': toDateNp,
      'halfDayStatus': halfDayStatus,
      'totalLeaveDays': totalLeaveDays,
      'extendedFromDate': extendedFromDate,
      'extendedToDate': extendedToDate,
      'extendedFromDateNp': extendedFromDateNp,
      'extendedToDateNp': extendedToDateNp,
      'extendedLeaveTypeId': extendedLeaveTypeId,
      'extendedHalfDayStatus': extendedHalfDayStatus,
      'extendedTotalLeaveDays': extendedTotalLeaveDays,
      'reason': reason,
      'status': status,
      'leaveTypeName': leaveTypeName,
      'extendedLeaveTypeName': extendedLeaveTypeName,
      'employeeDisplayName': employeeDisplayName,
      'isRecommendationApproved': isRecommendationApproved,
      'isApproved': isApproved,
      'isSubstituteAccepted': isSubstituteAccepted,
      'substitutationStatus': substitutationStatus,
      'recommendationStatus': recommendationStatus,
      'leaveNo': leaveNo,
      'isInValidForApproval': isInValidForApproval,
      'leaveApprovedBy': leaveApprovedBy,
      'approveRemarks': approveRemarks,
      'leaveApprovedOn': leaveApprovedOn,
      'rejectedBy': rejectedBy,
      'recommendationApprovedBy': recommendationApprovedBy,
      'recommendationApprovedOn': recommendationApprovedOn,
      'recommendationRemarks': recommendationRemarks,
      'substituteAcceptRejectBy': substituteAcceptRejectBy,
      'substituteAcceptRejectOn': substituteAcceptRejectOn,
      'substituteRemarks': substituteRemarks,
      'substituteEmployeeName': substituteEmployeeName,
      'recommendedByEmployeeName': recommendedByEmployeeName,
    };
  }
}
